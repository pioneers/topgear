/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace forseti2
{
    public sealed class piemos_cmd : LCM.LCM.LCMEncodable
    {
        public forseti2.header header;
        public bool auton;
        public bool enabled;
        public bool is_blue;
        public int game_time;
 
        public piemos_cmd()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xa6ee79d563b22a14L;
 
        static piemos_cmd()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("forseti2.piemos_cmd"))
                return 0L;
 
            classes.Add("forseti2.piemos_cmd");
            ulong hash = LCM_FINGERPRINT_BASE
                 + forseti2.header._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            this.header._encodeRecursive(outs); 
 
            outs.Write(this.auton); 
 
            outs.Write(this.enabled); 
 
            outs.Write(this.is_blue); 
 
            outs.Write(this.game_time); 
 
        }
 
        public piemos_cmd(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public piemos_cmd(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static forseti2.piemos_cmd _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            forseti2.piemos_cmd o = new forseti2.piemos_cmd();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.header = forseti2.header._decodeRecursiveFactory(ins);
 
            this.auton = ins.ReadBoolean();
 
            this.enabled = ins.ReadBoolean();
 
            this.is_blue = ins.ReadBoolean();
 
            this.game_time = ins.ReadInt32();
 
        }
 
        public forseti2.piemos_cmd Copy()
        {
            forseti2.piemos_cmd outobj = new forseti2.piemos_cmd();
            outobj.header = this.header.Copy();
 
            outobj.auton = this.auton;
 
            outobj.enabled = this.enabled;
 
            outobj.is_blue = this.is_blue;
 
            outobj.game_time = this.game_time;
 
            return outobj;
        }
    }
}

