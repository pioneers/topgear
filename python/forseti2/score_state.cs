/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace forseti2
{
    public sealed class score_state : LCM.LCM.LCMEncodable
    {
        public forseti2.header header;
        public byte blue_total;
        public byte gold_total;
        public byte blue_autonomous_points;
        public byte gold_autonomous_points;
        public byte blue_normal_points;
        public byte gold_normal_points;
        public byte blue_permanent_points;
        public byte gold_permanent_points;
        public byte blue_penalty;
        public byte gold_penalty;
        public byte bonus_possession;
        public byte bonus_points;
        public byte bonus_time_remaining;
 
        public score_state()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x4b09fcdd281b73b1L;
 
        public const int BLUE = 1;
        public const int GOLD = 2;
        public const int NEUTRAL = 4;

        static score_state()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("forseti2.score_state"))
                return 0L;
 
            classes.Add("forseti2.score_state");
            ulong hash = LCM_FINGERPRINT_BASE
                 + forseti2.header._hashRecursive(classes)
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            this.header._encodeRecursive(outs); 
 
            outs.Write(this.blue_total); 
 
            outs.Write(this.gold_total); 
 
            outs.Write(this.blue_autonomous_points); 
 
            outs.Write(this.gold_autonomous_points); 
 
            outs.Write(this.blue_normal_points); 
 
            outs.Write(this.gold_normal_points); 
 
            outs.Write(this.blue_permanent_points); 
 
            outs.Write(this.gold_permanent_points); 
 
            outs.Write(this.blue_penalty); 
 
            outs.Write(this.gold_penalty); 
 
            outs.Write(this.bonus_possession); 
 
            outs.Write(this.bonus_points); 
 
            outs.Write(this.bonus_time_remaining); 
 
        }
 
        public score_state(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public score_state(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static forseti2.score_state _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            forseti2.score_state o = new forseti2.score_state();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.header = forseti2.header._decodeRecursiveFactory(ins);
 
            this.blue_total = ins.ReadByte();
 
            this.gold_total = ins.ReadByte();
 
            this.blue_autonomous_points = ins.ReadByte();
 
            this.gold_autonomous_points = ins.ReadByte();
 
            this.blue_normal_points = ins.ReadByte();
 
            this.gold_normal_points = ins.ReadByte();
 
            this.blue_permanent_points = ins.ReadByte();
 
            this.gold_permanent_points = ins.ReadByte();
 
            this.blue_penalty = ins.ReadByte();
 
            this.gold_penalty = ins.ReadByte();
 
            this.bonus_possession = ins.ReadByte();
 
            this.bonus_points = ins.ReadByte();
 
            this.bonus_time_remaining = ins.ReadByte();
 
        }
 
        public forseti2.score_state Copy()
        {
            forseti2.score_state outobj = new forseti2.score_state();
            outobj.header = this.header.Copy();
 
            outobj.blue_total = this.blue_total;
 
            outobj.gold_total = this.gold_total;
 
            outobj.blue_autonomous_points = this.blue_autonomous_points;
 
            outobj.gold_autonomous_points = this.gold_autonomous_points;
 
            outobj.blue_normal_points = this.blue_normal_points;
 
            outobj.gold_normal_points = this.gold_normal_points;
 
            outobj.blue_permanent_points = this.blue_permanent_points;
 
            outobj.gold_permanent_points = this.gold_permanent_points;
 
            outobj.blue_penalty = this.blue_penalty;
 
            outobj.gold_penalty = this.gold_penalty;
 
            outobj.bonus_possession = this.bonus_possession;
 
            outobj.bonus_points = this.bonus_points;
 
            outobj.bonus_time_remaining = this.bonus_time_remaining;
 
            return outobj;
        }
    }
}

